- name: create users
  user:
    name: "{{ item }}"
    system: yes
    create_home: no
  become: yes
  with_items:
    - "{{ ims_user }}"
    - "{{ postgres_user }}"
    - "{{ elasticsearch_user }}"

- name: setup data directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    mode: u=rwX,g=rwX,o=
    recurse: yes
  become: yes
  with_items:
    - path: "{{ data_dir }}/postgres"
      owner: "{{ postgres_user }}"
    - path: "{{ data_dir }}/media"
      owner: "{{ ims_user }}"
    - path: "{{ data_dir }}/static"
      owner: "{{ ims_user }}"
    - path: "{{ data_dir }}/elasticsearch"
      owner: "{{ elasticsearch_user }}"

- name: Create project directories
  file:
    path: "{{item}}"
    state: directory
    owner: "{{ ansible_user }}"
  become: yes
  with_items:
    - /var/projects/ebisc/ebisc-ims
    - /var/projects/ebisc/postgres
    - /var/projects/ebisc/mailer
    - /var/projects/ebisc/scripts

- name: Initialise git repo
  git:
    dest: /var/projects/ebisc/ebisc-ims
    repo: https://github.com/EBiSC/ebisc.git
    accept_hostkey: yes
    update: yes
    version: "{{ git_branch }}"
  register: git

- name: copy files
  copy: "dest=/var/projects/ebisc/{{ item }} src={{ item }}"
  with_items:
    - postgres/Dockerfile-postgres
    - mailer/Dockerfile-mailer
    - mailer/run-mailer

- name: copy scripts
  copy: "dest=/var/projects/ebisc/scripts/{{ item }} src=scripts/{{ item }} mode=0755"
  with_items:
    - dump_db.bash
    - import_db.bash

- name: build ims uwsgi
  docker_image:
    path: /var/projects/ebisc/ebisc-ims
    dockerfile: Dockerfile-uwsgi
    name: ebisc/ims-uwsgi
    state: present
    buildargs:
      ROLE: "{{ ims_role }}"
    tag: "{{git.after}}"
  register: uwsgi_build

- name: retag image
  command: "docker tag ebisc/ims-uwsgi:{{git.after}} ebisc/ims-uwsgi:latest"

- name: build postgres image
  docker_image:
    path: /var/projects/ebisc/postgres
    dockerfile: Dockerfile-postgres
    name: ebisc/postgres
    state: present
    force: yes
  register: postgres_build

- name: restart postgres
  become: yes
  systemd:
    name: ims-postgres.service
    state: restarted
  when: postgres_build.changed

- name: Wait for postgres to start
  pause:
    seconds: 10
  when: postgres_build.changed

- name: start elasticsearch
  become: yes
  systemd:
    name: ims-elasticsearch.service
    state: started

- name: "collectstatic, migrate django, and import toelastic"
  become: yes
  systemd:
    daemon_reload: yes
    name: ims-deploy.service
    state: restarted
  when: uwsgi_build.changed

- name: restart uwsgi
  become: yes
  systemd:
    daemon_reload: yes
    name: ims-uwsgi.service
    state: restarted
  when: uwsgi_build.changed

- name: build ims nginx
  docker_image:
    path: /var/projects/ebisc/ebisc-ims
    dockerfile: Dockerfile-nginx
    name: ebisc/ims-nginx
    state: present
    tag: "{{git.after}}"
  register: nginx_build

- name: retag image
  command: "docker tag ebisc/ims-nginx:{{git.after}} ebisc/ims-nginx:latest"

- name: restart nginx
  become: yes
  systemd:
    name: ims-nginx.service
    state: restarted
  when: nginx_build.changed

- name: build mailer
  docker_image:
    path: /var/projects/ebisc/mailer
    dockerfile: Dockerfile-mailer
    name: ebisc/mailer
    state: present
    force: yes

- name: "enable unit"
  become: yes
  systemd:
    daemon_reload: yes
    enabled: yes
    name: "{{ item }}"
    state: started
  with_items:
    - ims-postgres.service
    - ims-uwsgi.service
    - ims-nginx.service
    - ims-elasticsearch.service

- name: "enable unit"
  become: yes
  systemd:
    daemon_reload: yes
    enabled: yes
    name: "{{ item }}"
    state: started
  with_items:
    - ims-updates.timer
  when: ims_role == "production"
