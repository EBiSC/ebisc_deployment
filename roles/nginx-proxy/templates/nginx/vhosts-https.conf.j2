server {
  listen 8443 default_server;
  server_name _;
  # Django can only handle known/allowed names
  # so we keep away unknown server/host names
  return 444;

  # necessary anyways, although the connection should be close (nginx complains)
  ssl_certificate     /etc/letsencrypt/live/{{ main_certificate }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ main_certificate }}/privkey.pem;
}

server {
  listen 8443 ssl;
  server_name old-ims.cell-type.org;

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://{{ ims_host }}:{{ ims_port }};
    proxy_read_timeout 300;
  }
  ssl_certificate     /etc/letsencrypt/live/{{ main_certificate }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ main_certificate }}/privkey.pem;
{% for ssl_setting in ssl_settings %}
  {{ ssl_setting }}
{% endfor %}
}

{% if tracker_domain is defined %}
server {
  listen 8443 ssl;
  server_name {{ tracker_domain }};

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://{{ tracker_host }}:{{ tracker_port }};
  }
  ssl_certificate     /etc/letsencrypt/live/{{ main_certificate }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ main_certificate }}/privkey.pem;
{% for ssl_setting in ssl_settings %}
  {{ ssl_setting }}
{% endfor %}
}
{% endif %}
