{% if ims_role == 'production' %}
server {
  listen 8443 default_server;
  server_name _;
  # Django can only handle known/allowed names
  # so we keep away unknown server/host names
  return 444;

  # necessary anyways, although the connection should be close (nginx complains)
  ssl_certificate     /etc/letsencrypt/live/{{ main_certificate }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ main_certificate }}/privkey.pem;
}
{% endif %}


{% for domain in ims_domains %}
{% if domain.letsencrypt and domain.name != 'old-ims.cell-type.org' %}
server {
  listen 8443 ssl;
  server_name {{ domain.name }};

  if ($host != 'ebisc.org') {
    rewrite ^/contact https://ebisc.org/contact permanent;
  }

{% if False %}
  location /executive/ {
    default_type text/plain;
    return 503 "migration in progress";
  }
{% endif %}

  # make sure we don't end up in forwarding loops for non-migrated pages
  location /faq/ {
{% if domain.name == main_ims_domain or 'dev' in group_names %}
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://{{ ims_host }}:{{ ims_port }};
    proxy_read_timeout 300;
{% else %}
    rewrite ^/(.*) https://{{ main_ims_domain }}/$1 permanent;
{% endif %}
  }
  location /customer-information/ {
{% if domain.name == main_ims_domain or 'dev' in group_names %}
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://{{ ims_host }}:{{ ims_port }};
    proxy_read_timeout 300;
{% else %}
    rewrite ^/(.*) https://{{ main_ims_domain }}/$1 permanent;
{% endif %}
  }
  location /depositors-information/ {
{% if domain.name == main_ims_domain or 'dev' in group_names %}
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://{{ ims_host }}:{{ ims_port }};
    proxy_read_timeout 300;
{% else %}
    rewrite ^/(.*) https://{{ main_ims_domain }}/$1 permanent;
{% endif %}
  }
  location /media/ {
{% if domain.name == main_ims_domain or 'dev' in group_names %}
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://{{ ims_host }}:{{ ims_port }};
    proxy_read_timeout 300;
{% else %}
    rewrite ^/(.*) https://{{ main_ims_domain }}/$1 permanent;
{% endif %}
  }

  location / {
{% if ims_role != 'production' and (domain.name == main_ims_domain or 'dev' in group_names) %}
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://{{ ebisc_host }};
    proxy_read_timeout 300;
{% elif domain.name == main_ims_domain or ims_role != 'production' %}
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://{{ ims_host }}:{{ ims_port }};
    proxy_read_timeout 300;
{% else %}
    rewrite ^/(.*) https://{{ main_ims_domain }}/$1 permanent;
{% endif %}
  }

  ssl_certificate     /etc/letsencrypt/live/{{ main_certificate }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ main_certificate }}/privkey.pem;
{% for ssl_setting in ssl_settings %}
  {{ ssl_setting }}
{% endfor %}
}
{% endif %}
{% endfor %}


server {
  listen 8443 ssl;
  server_name old-ims.cell-type.org;

{% if True %}
  location /executive/ {
    default_type text/plain;
    return 503 "migration in progress";
  }
{% endif %}

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://{{ ims_host }}:{{ ims_port }};
    proxy_read_timeout 300;
  }
  ssl_certificate     /etc/letsencrypt/live/{{ main_certificate }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ main_certificate }}/privkey.pem;
{% for ssl_setting in ssl_settings %}
  {{ ssl_setting }}
{% endfor %}
}

{% if tracker_domain is defined %}
server {
  listen 8443 ssl;
  server_name {{ tracker_domain }};

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://{{ tracker_host }}:{{ tracker_port }};
  }
  ssl_certificate     /etc/letsencrypt/live/{{ main_certificate }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ main_certificate }}/privkey.pem;
{% for ssl_setting in ssl_settings %}
  {{ ssl_setting }}
{% endfor %}
}
{% endif %}
